[{"title":"滴水逆向笔记（四）","date":"2022-02-09T13:28:29.000Z","url":"/2022/02/09/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/","categories":[["undefined",""]],"content":"1.通用寄存器：32位：EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI 16位：AX,CX,DX,BX,SP,BP,SI,DI 8位：AL,CL,DL,BL,AH,CH,DH,BH 2.MOV语法： MOV 目标操作数 源操作数 作用：将源操作数拷贝到目标操作数 另外，还有如SUB、ADD、XOR、AND等等逻辑运算也运用到了 3.源操作数可以是立即数、通用寄存器、段寄存器或内存单元 4.目标操作数可以是通用寄存器、段寄存器或内存单元 5.操作数的宽度必须一样 6.源操作数和目标操作数不能同时为内存单元 7.从指定内存中写入数据的格式： mov dword（也可以是其他的·） ptr ds [0x0012FF34],0x12345678 mov eax ptr ds：[0x0012FF34] 具体如下图所示："},{"title":"滴水逆向笔记（三）","date":"2022-02-09T13:27:08.000Z","url":"/2022/02/09/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/","categories":[["undefined",""]],"content":"​1.在计算机中由于受到硬件制约，数据是有长度限制的，所以在计算机中超过长度的数据就会被舍弃。 2.如下图所示，有符号数和无符号数 3.几个重要的计量单位 字节 1Byte = 8Bit 字 1Word =16Bit 双字 1DWord = 32Bit 4.逻辑运算 （吐槽：导论考试第一题就是这个，考试时就想着只要这个东西不出错分多低都不难受， 结果出考场一看，是我低估了，也不能说低估，就是还是自己学的不踏实） 其实通过下图电路图本质就已经很明了了 （1）或（or |） （2）与（and &amp;） （3）异或（xor ^） （4）非（not ！） 只能说这个确实简单了，若0则1，若1则0 5.CPU如何运算的？ 比如算5+4=？ 这里看图就可以了，设计这种算法的人真，确实鬼才 6.关于简单加密 主要就是利用异或算法进行加密​"},{"title":"攻防世界web新手练习区（1-12）","date":"2022-02-09T13:18:21.000Z","url":"/2022/02/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA%EF%BC%881-12%EF%BC%89/","categories":[["undefined",""]],"content":"一.view source直接F12，可以看到flag:cyberpeace{3485c40fbf442a57c1ac6280af8070e7} 二、robots先在网址添加后缀robots.txt,会出现如下页面然后我们将后缀改为flag_1s_h3re.phpflag:cyberpeace{04cbb73c4d62a9cd327bb2faf9bbcfbf} 三、backup打开页面，问你知道index.php的备份文件吗，然后我们再加上后缀index.php.bak,此时下载文件打开下载好的文件，flag出现了flag：Cyberpeace{855A1C4B3401294CB6604CCC98BDE334} 四、cookie打开页面，按F12找cookie，如图此时可以在网址后缀加上cookie.php,出现如图页面，意思是查看http响应然后使用burpsuite进行抓包，查看http响应，如图可得flagflag:cyberpeace{b85003abf4d902f502cda1f75f393fb1} 五、disabled_button打开页面，按钮确实没法按，遇事不决F12看到有个disabled,心想改一下把disabled变成abled，按钮能按了，按一下如下所示flag:cyberpeace{96e4244aa3517089b882bbf29d9e593d} 六、weak auth打开是个登陆页面，我们随便输个用户名密码进去，如下，意思是请以admin登录然后用burpsuite进行抓包爆破，抓包时我们随便输入密码，然后进入测试器一栏，在密码55旁边添加§进入有效载荷，点击载入中选择字典，然后点击开始攻击通过长这一列来判断爆破是否成功，看到不一样的长，我们点击它，然后点击之后我们点击响应，看到了flag，当然也可以自己手动输入密码flag:cyberpeace{7caf75b6f189f19ee14008ac95003882} 七、simple php打开页面，发现跟传参有关，我们先传?a==0,得到如图所示发现是一半flag,我们看一下语句，这里注意：is_numeric() 函数用于检测变量是否为数字或数字字符串传入对应参数，得到完整的flagflag:Cyberpeace{647E37C7627CC3E4019EC69324F66C7C} 八、get post打开页面,让传递参数，照他说的做然后又让提交变量,这里直接用hackbar提交，得到flagflag:cyberpeace{d8b214b7f9ea4ff909293f0d4c05fb6a} 九、xff_referer先查下相关资料维基百科上对xff和referer的解释：X-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP头字段。Referer 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。简单地说，xff是告诉服务器当前请求者的最终ip的http请求头字段，通常可以直接通过修改http头中的X-Forwarded-For字段来仿造请求的最终ipreferer就是告诉服务器当前访问者是从哪个url地址跳转到自己的，跟xff一样，referer也可直接修改开始做题：打开页面，显示ip必须为123.123.123.123，开始抓包，在代理一栏，然后发送给Repeater，然后点击重发器，点击头，点击添加，之后添加如下所示，再点击发送从上图右边可以看到有一段话必须来自…，然后再次添加referer，如下图所示添加完点击发送，看到了flagflag：cyberpeace{e79f149f49a3503d622f0494bc630f3a} 十、webshell百度百科：webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。使用方法简单，只需上传一个代码文件，通过网址访问，便可进行很多日常操作，极大地方便了使用者对网站和服务器的管理。正因如此，也有小部分人将代码修改后当作后门程序使用，以达到控制网站服务器的目的。 [1]顾名思义，“web”的含义是显然需要服务器开放web服务，“shell”的含义是取得对服务器某种程度上操作命令。webshell主要用于网站和服务器管理，由于其便利性和功能强大，被特别修改后的webshell也被部分人当作网站后门工具使用。 打开页面，直接用中国菜刀（这个也属于是一个webshell），然后右键添加，如下图所示添加好之后直接双击打开，页面如下打开flag.txtflag：cyberpeace{1d4d78cf4b8f02604295835ba209fd72} 十一、command execution先了解相关知识PING:：Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。ls命令：命令：开始做题：先使用搜索命令查找是否有flag.txt这一文本ping一下，如图所示，找到了flag.txt之后用cat命令打开文本ping一下，出现了flag：cyberpeace{50da66af3eac110a4eaf116169f0286e} 十二、simple js打开页面，是个输密码的页面，直接点确定，然后进入一个空白页面，这时直接查看页面源代码，发现有东西这个看起来好像url解码，这里将\\x换成%，然后使用url解码，解出来一堆数字，此时对照ASCII码表进行解密，解出来786OsErtk12flag：Cyberpeace{786OsErtk12}"},{"title":"滴水逆向笔记（二）","date":"2022-01-12T13:41:00.000Z","url":"/2022/01/12/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/","categories":[["undefined",""]],"content":"1.在什么情况下满足2+3=1？ 其实这个无非就是自己定义一个进制，就比如自己定义一个十进制，进制中的元素可以是随机的， 按顺序来0，2，3，1，6，4，5，9，7，8；这个就满足2+3=1 2.进制并不是死的，就像365进制也是存在的，多少进制都是存在的，这时候思维应该要放灵活的 3.假如定义一个三进制，由2，0，1组成； 2 0 1 02 00 01 12 10 11 11+2（往后移两位的意思）=020 11+2（这里是进制中的2）=022 4.通过这种咋一眼看起来很没有逻辑的进制，我们可以搞一种这种类型的进制加密，也是其意义之一了"},{"title":"滴水逆向笔记（一）","date":"2022-01-12T09:51:46.000Z","url":"/2022/01/12/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"]],"categories":[["undefined",""]],"content":"#第一篇博客 1.进制：几进制就逢几进一，十进制逢十进一，二进制逢二进一 几进制中有几个数字，十进制有0，1，2，3，4，5，6，7，8，9这十个数字，二进制有0，1两个数字 十六进制有1，2，3，4，5，6，7，8，9，A,B,C,D,E,F； 二进制对应的为0001，0010，0011，0100，0101，0110，0111，1000，1001，1010(A)，1011(B)，1100(C),1101(D),1110(E),1111(F) 2.二进制 计算机上的所有文件都是以二进制方式存储的，且受硬件制约，只能用二进制，另外，二进制足够表示了 3.一句经典的话：进制之间不需要转换，每个进制都是最完美的进制 4.计算方法本质上就是查出来的 十六进制下： 15+5=15+1+4=24； 5*4=5+5+5+1+4=24；————————————————版权声明：本文为CSDN博主「瑟瑟发dou的小怪」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。原文链接："},{"title":"Hello World","date":"2022-01-12T06:07:38.312Z","url":"/2022/01/12/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]